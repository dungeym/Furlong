name: build

on:
  push:
    branches: [ master ]
    tags: [ v* ]

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        include:
          - os: macos-latest
            os_name: macos
          - os: ubuntu-latest
            os_name: linux
          - os: windows-latest
            os_name: windows

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
        
    - name: Install Dependencies
      run: dotnet restore
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: true
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
        NUGET_XMLDOC_MODE: skip
    
    - name: Build
      run: dotnet build --configuration Release --no-restore --output ./artifacts
      
    - name: Test
      run: dotnet test --no-restore --verbosity normal
      
    - name: Pack
      run: dotnet pack --output ./artifacts/packages --configuration Release --include-symbols --include-source --verbosity detailed -version "1.0.0-x"

    - name: Publish artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts-${{ matrix.os_name }}
        path: ./artifacts

    - name: Publish packages
      uses: actions/upload-artifact@v2
      with:
        name: packages-${{ matrix.os_name }}
        path: ./artifacts/packages

    - name: Push NuGet packages to NuGet.org
      run: dotnet nuget push ./artifacts/packages/*.nupkg --api-key ${{ secrets.NUGET_TOKEN }} --skip-duplicate
      if: ${{ startsWith(github.ref, 'refs/tags/v') && runner.os == 'windows' }}
